datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//region User

enum Role {
  ADMIN
  USER
  PARTNER
  REVIEWER
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  role          Role            @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  candidatureId String?
  Candidature   Candidature?    @relation(fields: [candidatureId], references: [id])
  ReviewRequest ReviewRequest[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

//endregion

// region Candidature

enum CandidatureKind {
  STAGE
  CDI
  ALTERNANCE
}

model Candidature {
  id              String           @id @default(uuid())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
  title           String
  kind            CandidatureKind
  mobile          String?
  info            String?
  firstName       String
  lastName        String
  city            String
  remote          Boolean
  email           String?
  passions        String?
  experiences     Experience[]
  schools         School[]
  Competences     Competences[]
  User            User[]
  userId          String?
  ReviewRequest   ReviewRequest?   @relation(fields: [reviewRequestId], references: [id])
  reviewRequestId String?
  ExperienceAsso  ExperienceAsso[]
  languages       Language[]
}

//region Candidature language
enum LangLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  FLUENT
  NATIVE
}

model Language {
  id            String       @id @default(uuid())
  language      String
  level         LangLevel
  Candidature   Candidature? @relation(fields: [candidatureId], references: [id])
  candidatureId String?
}

//endregion

model ReviewRequest {
  id            String        @id @default(cuid())
  candidatureId String
  approved      Boolean       @default(false)
  description   String        @default("")
  reviewerId    String?
  reviewer      User?         @relation(fields: [reviewerId], references: [id])
  Candidature   Candidature[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Experience {
  id            String       @id @default(uuid())
  startAt       DateTime?
  endAt         DateTime?
  companyName   String
  job           String       @default("")
  missions      String[]
  Candidature   Candidature? @relation(fields: [candidatureId], references: [id])
  candidatureId String?
}

model ExperienceAsso {
  id            String       @id @default(uuid())
  startAt       DateTime?
  endAt         DateTime?
  job           String       @default("")
  name          String
  missions      String[]
  Candidature   Candidature? @relation(fields: [candidatureId], references: [id])
  candidatureId String?
}

model School {
  id             String       @id @default(uuid())
  startAt        DateTime?
  endAt          DateTime?
  universityName String
  title          String       @default("")
  description    String
  Candidature    Candidature? @relation(fields: [candidatureId], references: [id])
  candidatureId  String?
}

model Competences {
  id            String         @id @default(uuid())
  description   String
  type          CompetenceType
  Candidature   Candidature?   @relation(fields: [candidatureId], references: [id])
  candidatureId String?
}

//endregion

// region Event
enum Event {
  VIEW
  LIKED
}

model Events {
  id            String   @id @default(uuid())
  event         Event
  userId        String
  candidatureId String
  createdAt     DateTime @default(now())
}

//endregion

enum CompetenceType {
  C_SHARP
  JAVA
  PYTHON
  JAVASCRIPT
  SWIFT
  KOTLIN
  TYPESCRIPT
  PHP
  RUBY
  GO
  RUST
  SQL
  HTML_CSS
  REACT
  ANGULAR
  VUE_JS
  DJANGO
  RUBY_ON_RAILS
  EXPRESS_JS
  SPRING_BOOT
  FLUTTER
  REACT_NATIVE
  XAMARIN
  NODE_JS
  GRAPHQL
  FIREBASE
  DOCKER
  KUBERNETES
  GIT
  REDUX
  MOBX
  VUEX
  MICROSERVICES_ARCHITECTURE
  SERVERLESS_ARCHITECTURE
  POO
  PROGRAMMATION_FONCTIONNELLE
  IA_ML_DEVELOPMENT
  BLOCKCHAIN_DEVELOPMENT
  C_PLUS_PLUS
  DART
  REDUX_SAGA
  DEVOPS
  JENKINS
  AWS_AMPLIFY
  DJANGO_REST_FRAMEWORK
  FIREBASE_AUTHENTICATION

  PLANIFICATION
  BUDGETISATION
  RESSOURCES_HUMAINES
  GESTION_PROJET
  ANALYSE_DONNEES
  COMMUNICATION_INTERPERSONNELLE
  RESOLUTION_PROBLEMES
  PRISE_DECISION
  LEADERSHIP
  GESTION_TEMPS
  GESTION_CHANGEMENT
  NEGOCIATION
  GESTION_RISQUES
  MANAGEMENT
  COORDINATION_EQUIPE
  SUIVI_EVALUATION
  AGILES
  SCRUM
  CASCADE
  PRINCE2
  ITERATIVES
  KANBAN
  SIX_SIGMA
  TABLEAUX_BORD
  GESTION_QUALITE
  MANAGEMENT_PROJET
  PORTEFEUILLE_PROJETS
  RESSOURCES
  PERFORMANCE
  ACHATS
  FOURNISSEURS
  CONTRATS
  APPROVISIONNEMENTS
  CHAINE_LOGISTIQUE
  AUDIT
  ANALYSE_FINANCIERE
  STOCKS
  VENTES
  RELATIONS_CLIENTS
  MARKETING
  CAMPAGNES_PUBLICITAIRES
  MEDIAS_SOCIAUX
  RELATIONS_PUBLIQUES
  PARTENARIATS
  RECRUTEMENT
  FORMATION
  EVALUATION_PERFORMANCES
  ANIMATION_REUNION
  CONFLITS
  ADMINISTRATION_SYSTEME
  SECURITE_RESEAU
  ROUTAGE
  COMMUTATION
  PARE_FEUX
  VLAN
  TCP_IP
  DHCP
  DNS
  VPN
  SURVEILLANCE_RESEAU
  DEPANNAGE_RESEAU
  RESEAU_CLOUD
  EQUIPEMENTS_CISCO
  EQUIPEMENTS_JUNIPER
  PROTOCOLES_RESEAU
  WAN
  WLAN
  VIRTUALISATION_RESEAU
  CABLAGE_RESEAU
  SERVEUR
  RESEAU_CENTRE_DONNEES
  DOCUMENTATION_RESEAU
  MISE_EN_OEUVRE_SECURITE_RESEAU
  PLANIFICATION_CAPACITE_RESEAU
  INSTALLATION_MATERIEL_RESEAU
  DEPANNAGE_RESEAU_REPARATION
  CONFIGURATION_RESEAU
  SOLUTIONS_STOCKAGE_RESEAU
  OUTILS_SURVEILLANCE_RESEAU
  AUDIT_SECURITE_RESEAU
  SAUVEGARDE_RESTAURATION_RESEAU
  OPTIMISATION_WAN
  ARCHITECTURE_RESEAU
  DEPLOIEMENT_RESEAU
  DEPLOIEMENT_CENTRE_DONNEES
}
